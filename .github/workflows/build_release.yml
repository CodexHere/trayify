name: Build and Release Trayify

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04 # Use Ubuntu 22.04 to match GLIBC 2.35

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install System Dependencies
        run: |
          sudo apt update && \
          sudo apt install -y \
            build-essential \
            curl \
            gir1.2-appindicator3-0.1 \
            gir1.2-ayatanaappindicator3-0.1 \
            gir1.2-gtk-3.0 \
            libayatana-appindicator3-dev \
            libffi-dev \
            libffi7 \
            libgirepository1.0-dev \
            libgtk-3-dev \
            libssl-dev \
            openssl \
            python3-dev \
            python3-pip-whl \
            python3-setuptools-whl

      - name: Build pyenv w/SSL
        run: |
          export PYTHON_CONFIGURE_OPTS="--with-openssl=$(brew --prefix openssl 2>/dev/null || echo /usr/include/openssl)"
          export CFLAGS="-I/usr/include/openssl"
          export LDFLAGS="-L/usr/lib/ssl"
          curl https://pyenv.run | bash

          export PATH="$HOME/.pyenv/bin:$PATH"
          echo 'eval "$(pyenv init --path)"'
          echo 'eval "$(pyenv virtualenv-init -)"'

      - name: Install Python with pyenv
        run: |
          export PATH="$HOME/.pyenv/bin:$PATH"
          eval "$(pyenv init --path)"
          eval "$(pyenv virtualenv-init -)"

          # Fix to ensure OpenSSL headers are found
          export LDFLAGS="-L/usr/lib/x86_64-linux-gnu"
          export CPPFLAGS="-I/usr/include"
          export PYTHON_CONFIGURE_OPTS="--enable-shared --with-openssl=/usr"

          pyenv install 3.10.12
          pyenv global 3.10.12

          python -m venv venv
          source venv/bin/activate
          python -c "import ssl; print(ssl.OPENSSL_VERSION)"

      - name: Create venv & Install Python deps
        run: |
          python -m venv /tmp/venv
          source /tmp/venv/bin/activate
          pip install -U pip wheel
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: |
          export GI_TYPELIB_PATH=/usr/lib/x86_64-linux-gnu/girepository-1.0
          export XDG_DATA_DIRS=/usr/share
          env
          source /tmp/venv/bin/activate
          pyinstaller --add-data ./logo.png:. --hidden-import=gi.repository.Gtk --onefile ./trayify.py
          du -hs ./dist/trayify

      - name: Zip the Artifact
        run: |
          cd dist
          zip trayify.zip trayify

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false
          files: |
            dist/trayify.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
